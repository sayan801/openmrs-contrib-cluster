technicise-laptop-2@technicise-laptop-2-Vostro-3500:~/code/openmrs-contrib-cluster/terraform-backend$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_dynamodb_table.terraform_global_locks will be created
  + resource "aws_dynamodb_table" "terraform_global_locks" {
      + arn              = (known after apply)
      + billing_mode     = "PAY_PER_REQUEST"
      + hash_key         = "LockID"
      + id               = (known after apply)
      + name             = "openmrs-terraform-global-locks"
      + read_capacity    = (known after apply)
      + stream_arn       = (known after apply)
      + stream_label     = (known after apply)
      + stream_view_type = (known after apply)
      + tags_all         = (known after apply)
      + write_capacity   = (known after apply)

      + attribute {
          + name = "LockID"
          + type = "S"
        }

      + point_in_time_recovery (known after apply)

      + server_side_encryption (known after apply)

      + ttl (known after apply)
    }

  # aws_dynamodb_table.terraform_helm_locks will be created
  + resource "aws_dynamodb_table" "terraform_helm_locks" {
      + arn              = (known after apply)
      + billing_mode     = "PAY_PER_REQUEST"
      + hash_key         = "LockID"
      + id               = (known after apply)
      + name             = "openmrs-terraform-helm-locks"
      + read_capacity    = (known after apply)
      + stream_arn       = (known after apply)
      + stream_label     = (known after apply)
      + stream_view_type = (known after apply)
      + tags_all         = (known after apply)
      + write_capacity   = (known after apply)

      + attribute {
          + name = "LockID"
          + type = "S"
        }

      + point_in_time_recovery (known after apply)

      + server_side_encryption (known after apply)

      + ttl (known after apply)
    }

  # aws_s3_bucket.terraform_global will be created
  + resource "aws_s3_bucket" "terraform_global" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "openmrs-terraform-global"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration {
          + rule {
              + apply_server_side_encryption_by_default {
                  + sse_algorithm = "AES256"
                }
            }
        }

      + versioning {
          + enabled    = true
          + mfa_delete = false
        }

      + website (known after apply)
    }

  # aws_s3_bucket.terraform_helm will be created
  + resource "aws_s3_bucket" "terraform_helm" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "openmrs-terraform-helm"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration {
          + rule {
              + apply_server_side_encryption_by_default {
                  + sse_algorithm = "AES256"
                }
            }
        }

      + versioning {
          + enabled    = true
          + mfa_delete = false
        }

      + website (known after apply)
    }

Plan: 4 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.terraform_global,
│   on main.tf line 10, in resource "aws_s3_bucket" "terraform_global":
│   10: resource "aws_s3_bucket" "terraform_global" {
│ 
│ Use the aws_s3_bucket_versioning resource instead
│ 
│ (and 7 more similar warnings elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_dynamodb_table.terraform_global_locks: Creating...
aws_dynamodb_table.terraform_helm_locks: Creating...
aws_s3_bucket.terraform_global: Creating...
aws_s3_bucket.terraform_helm: Creating...
aws_dynamodb_table.terraform_helm_locks: Still creating... [00m10s elapsed]
aws_dynamodb_table.terraform_global_locks: Still creating... [00m10s elapsed]
aws_dynamodb_table.terraform_helm_locks: Creation complete after 13s [id=openmrs-terraform-helm-locks]
aws_dynamodb_table.terraform_global_locks: Creation complete after 13s [id=openmrs-terraform-global-locks]
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.terraform_global,
│   on main.tf line 10, in resource "aws_s3_bucket" "terraform_global":
│   10: resource "aws_s3_bucket" "terraform_global" {
│ 
│ Use the aws_s3_bucket_server_side_encryption_configuration resource instead
│ 
│ (and 3 more similar warnings elsewhere)
╵
╷
│ Error: creating Amazon S3 (Simple Storage) Bucket (openmrs-terraform-global): BucketAlreadyExists: The requested bucket name is not available. The bucket namespace is shared by all users of the system. Please select a different name and try again.
│ 	status code: 409, request id: HVE63T24ED7GV92C, host id: nCSGvXdSYVesGLtuozhOSl8OuDPNL80kJLJdmQxYWNidpwrZsC0uWEbfzcxLDnHxJj+22IHkJ5I=
│ 
│   with aws_s3_bucket.terraform_global,
│   on main.tf line 10, in resource "aws_s3_bucket" "terraform_global":
│   10: resource "aws_s3_bucket" "terraform_global" {
│ 
╵
╷
│ Error: creating Amazon S3 (Simple Storage) Bucket (openmrs-terraform-helm): BucketAlreadyExists: The requested bucket name is not available. The bucket namespace is shared by all users of the system. Please select a different name and try again.
│ 	status code: 409, request id: GFHXQ5VM8AVYJ5BQ, host id: IXBy+hY64eN1f2bJhWN8zOc9QPP6eCARGWralQESqXyBk0vvGpUpM0LLflWd8qC39gWvCrXSoFY=
│ 
│   with aws_s3_bucket.terraform_helm,
│   on main.tf line 40, in resource "aws_s3_bucket" "terraform_helm":
│   40: resource "aws_s3_bucket" "terraform_helm" {
│ 
╵
(base) technicise-laptop-2@technicise-laptop-2-Vostro-3500:~/code/openmrs-contrib-cluster/terraform-backend$ terraform apply
aws_dynamodb_table.terraform_global_locks: Refreshing state... [id=openmrs-terraform-global-locks]
aws_dynamodb_table.terraform_helm_locks: Refreshing state... [id=openmrs-terraform-helm-locks]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_s3_bucket.terraform_global will be created
  + resource "aws_s3_bucket" "terraform_global" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "openmrs-terraform-global-technicise"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration {
          + rule {
              + apply_server_side_encryption_by_default {
                  + sse_algorithm = "AES256"
                }
            }
        }

      + versioning {
          + enabled    = true
          + mfa_delete = false
        }

      + website (known after apply)
    }

  # aws_s3_bucket.terraform_helm will be created
  + resource "aws_s3_bucket" "terraform_helm" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "openmrs-terraform-helm"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration {
          + rule {
              + apply_server_side_encryption_by_default {
                  + sse_algorithm = "AES256"
                }
            }
        }

      + versioning {
          + enabled    = true
          + mfa_delete = false
        }

      + website (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.terraform_global,
│   on main.tf line 10, in resource "aws_s3_bucket" "terraform_global":
│   10: resource "aws_s3_bucket" "terraform_global" {
│ 
│ Use the aws_s3_bucket_versioning resource instead
│ 
│ (and 7 more similar warnings elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_s3_bucket.terraform_helm: Creating...
aws_s3_bucket.terraform_global: Creating...
aws_s3_bucket.terraform_global: Still creating... [00m10s elapsed]
aws_s3_bucket.terraform_global: Creation complete after 10s [id=openmrs-terraform-global-technicise]
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.terraform_global,
│   on main.tf line 10, in resource "aws_s3_bucket" "terraform_global":
│   10: resource "aws_s3_bucket" "terraform_global" {
│ 
│ Use the aws_s3_bucket_versioning resource instead
│ 
│ (and 3 more similar warnings elsewhere)
╵
╷
│ Error: creating Amazon S3 (Simple Storage) Bucket (openmrs-terraform-helm): BucketAlreadyExists: The requested bucket name is not available. The bucket namespace is shared by all users of the system. Please select a different name and try again.
│ 	status code: 409, request id: YCP00MJE9FNVS1GT, host id: ZdxTUiMiVV5WrYOZFG+0uyx1yvfLgawE1s96V3ujPdDSENosj8zsj14Fs2oBV+MGAfMev9vMDwDRi+JfsxapqQ==
│ 
│   with aws_s3_bucket.terraform_helm,
│   on main.tf line 40, in resource "aws_s3_bucket" "terraform_helm":
│   40: resource "aws_s3_bucket" "terraform_helm" {
│ 
╵
(base) technicise-laptop-2@technicise-laptop-2-Vostro-3500:~/code/openmrs-contrib-cluster/terraform-backend$ terraform apply
aws_dynamodb_table.terraform_helm_locks: Refreshing state... [id=openmrs-terraform-helm-locks]
aws_dynamodb_table.terraform_global_locks: Refreshing state... [id=openmrs-terraform-global-locks]
aws_s3_bucket.terraform_global: Refreshing state... [id=openmrs-terraform-global-technicise]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_s3_bucket.terraform_helm will be created
  + resource "aws_s3_bucket" "terraform_helm" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "openmrs-terraform-helm-technicise"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags_all                    = (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration {
          + rule {
              + apply_server_side_encryption_by_default {
                  + sse_algorithm = "AES256"
                }
            }
        }

      + versioning {
          + enabled    = true
          + mfa_delete = false
        }

      + website (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.terraform_global,
│   on main.tf line 10, in resource "aws_s3_bucket" "terraform_global":
│   10: resource "aws_s3_bucket" "terraform_global" {
│ 
│ Use the aws_s3_bucket_server_side_encryption_configuration resource instead
│ 
│ (and 7 more similar warnings elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_s3_bucket.terraform_helm: Creating...
aws_s3_bucket.terraform_helm: Still creating... [00m10s elapsed]
aws_s3_bucket.terraform_helm: Creation complete after 11s [id=openmrs-terraform-helm-technicise]
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.terraform_helm,
│   on main.tf line 40, in resource "aws_s3_bucket" "terraform_helm":
│   40: resource "aws_s3_bucket" "terraform_helm" {
│ 
│ Use the aws_s3_bucket_server_side_encryption_configuration resource instead
│ 
│ (and one more similar warning elsewhere)
╵

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
(base) technicise-laptop-2@technicise-laptop-2-Vostro-3500:~/code/openmrs-contrib-cluster/terraform-backend$ 
